"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _mongoose = _interopRequireDefault(require("mongoose"));
var _validator = _interopRequireDefault(require("validator"));
var isEmail = _validator["default"].isEmail;
var Schema = _mongoose["default"].Schema,
  model = _mongoose["default"].model;
var userSchema = new Schema({
  firstname: {
    type: String,
    required: [true, 'Please! provide firstname.']
  },
  lastname: {
    type: String,
    required: [true, 'Please! provide lastname.']
  },
  deviceId: {
    type: String,
    unique: true,
    required: [true, 'Please! provide deviceId.']
  },
  email: {
    type: String,
    //   required: [true, 'Please! provide your email.'],
    unique: true,
    lowercase: true,
    validate: [isEmail, 'Please! provide valid email']
  },
  phone: {
    type: String,
    required: [true, 'Please! provide your Phone .']
  },
  password: {
    type: String,
    required: [true, 'Please! provide password'],
    minlength: 10
  },
  passwordChangedAt: Date,
  passwordResetToken: String,
  passwordResetExpires: Date,
  active: {
    type: Boolean,
    "default": true
  },
  role: {
    type: String,
    "enum": ['client', 'admin'],
    "default": 'client'
  }
});
var User = model('user', userSchema);
var _default = User;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbW9uZ29vc2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl92YWxpZGF0b3IiLCJpc0VtYWlsIiwidmFsaWRhdG9yIiwiU2NoZW1hIiwibW9uZ29vc2UiLCJtb2RlbCIsInVzZXJTY2hlbWEiLCJmaXJzdG5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJsYXN0bmFtZSIsImRldmljZUlkIiwidW5pcXVlIiwiZW1haWwiLCJsb3dlcmNhc2UiLCJ2YWxpZGF0ZSIsInBob25lIiwicGFzc3dvcmQiLCJtaW5sZW5ndGgiLCJwYXNzd29yZENoYW5nZWRBdCIsIkRhdGUiLCJwYXNzd29yZFJlc2V0VG9rZW4iLCJwYXNzd29yZFJlc2V0RXhwaXJlcyIsImFjdGl2ZSIsIkJvb2xlYW4iLCJyb2xlIiwiVXNlciIsIl9kZWZhdWx0IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvdXNlck1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5pbXBvcnQgdmFsaWRhdG9yIGZyb20gJ3ZhbGlkYXRvcic7XHJcbmNvbnN0IHsgaXNFbWFpbCB9ID0gdmFsaWRhdG9yO1xyXG5jb25zdCB7IFNjaGVtYSwgbW9kZWwgfSA9IG1vbmdvb3NlO1xyXG5cclxuICAgIFxyXG5jb25zdCB1c2VyU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBmaXJzdG5hbWU6IHtcclxuICAgICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAnUGxlYXNlISBwcm92aWRlIGZpcnN0bmFtZS4nXVxyXG4gICAgICB9LFxyXG4gICAgbGFzdG5hbWU6IHtcclxuICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICByZXF1aXJlZDogW3RydWUsICdQbGVhc2UhIHByb3ZpZGUgbGFzdG5hbWUuJ11cclxuICAgIH0sXHJcbiAgICBkZXZpY2VJZDoge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAnUGxlYXNlISBwcm92aWRlIGRldmljZUlkLiddXHJcbiAgICB9LFxyXG5cclxuICAgIGVtYWlsOiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgIC8vICAgcmVxdWlyZWQ6IFt0cnVlLCAnUGxlYXNlISBwcm92aWRlIHlvdXIgZW1haWwuJ10sXHJcbiAgICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgICAgbG93ZXJjYXNlOiB0cnVlLFxyXG4gICAgICB2YWxpZGF0ZTogW2lzRW1haWwsICdQbGVhc2UhIHByb3ZpZGUgdmFsaWQgZW1haWwnXVxyXG4gICAgfSxcclxuICAgIHBob25lOiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAnUGxlYXNlISBwcm92aWRlIHlvdXIgUGhvbmUgLiddXHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICBwYXNzd29yZDoge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1BsZWFzZSEgcHJvdmlkZSBwYXNzd29yZCddLFxyXG4gICAgICBtaW5sZW5ndGg6IDEwLFxyXG4gICAgXHJcbiAgICB9LFxyXG4gICBcclxuICAgIHBhc3N3b3JkQ2hhbmdlZEF0OiBEYXRlLFxyXG4gICAgcGFzc3dvcmRSZXNldFRva2VuOiBTdHJpbmcsXHJcbiAgICBwYXNzd29yZFJlc2V0RXhwaXJlczogRGF0ZSxcclxuICAgIGFjdGl2ZToge1xyXG4gICAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgICBkZWZhdWx0OiB0cnVlLFxyXG4gICAgICBcclxuICAgIH0sXHJcbiAgIFxyXG4gICAgcm9sZToge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIGVudW06IFsnY2xpZW50JywgJ2FkbWluJ10sXHJcbiAgICAgIGRlZmF1bHQ6ICdjbGllbnQnXHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IFVzZXIgPSBtb2RlbCgndXNlcicsIHVzZXJTY2hlbWEpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVXNlcjsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQSxJQUFBQSxTQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxVQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFRRSxPQUFPLEdBQUtDLHFCQUFTLENBQXJCRCxPQUFPO0FBQ2YsSUFBUUUsTUFBTSxHQUFZQyxvQkFBUSxDQUExQkQsTUFBTTtFQUFFRSxLQUFLLEdBQUtELG9CQUFRLENBQWxCQyxLQUFLO0FBR3JCLElBQU1DLFVBQVUsR0FBRyxJQUFJSCxNQUFNLENBQUM7RUFDMUJJLFNBQVMsRUFBRTtJQUNQQyxJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLDRCQUE0QjtFQUMvQyxDQUFDO0VBQ0hDLFFBQVEsRUFBRTtJQUNSSCxJQUFJLEVBQUVDLE1BQU07SUFDWkMsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLDJCQUEyQjtFQUM5QyxDQUFDO0VBQ0RFLFFBQVEsRUFBRTtJQUNSSixJQUFJLEVBQUVDLE1BQU07SUFDWkksTUFBTSxFQUFFLElBQUk7SUFDWkgsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLDJCQUEyQjtFQUM5QyxDQUFDO0VBRURJLEtBQUssRUFBRTtJQUNMTixJQUFJLEVBQUVDLE1BQU07SUFDZDtJQUNFSSxNQUFNLEVBQUUsSUFBSTtJQUNaRSxTQUFTLEVBQUUsSUFBSTtJQUNmQyxRQUFRLEVBQUUsQ0FBQ2YsT0FBTyxFQUFFLDZCQUE2QjtFQUNuRCxDQUFDO0VBQ0RnQixLQUFLLEVBQUU7SUFDTFQsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSw4QkFBOEI7RUFDakQsQ0FBQztFQUVEUSxRQUFRLEVBQUU7SUFDUlYsSUFBSSxFQUFFQyxNQUFNO0lBQ1pDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSwwQkFBMEIsQ0FBQztJQUM1Q1MsU0FBUyxFQUFFO0VBRWIsQ0FBQztFQUVEQyxpQkFBaUIsRUFBRUMsSUFBSTtFQUN2QkMsa0JBQWtCLEVBQUViLE1BQU07RUFDMUJjLG9CQUFvQixFQUFFRixJQUFJO0VBQzFCRyxNQUFNLEVBQUU7SUFDTmhCLElBQUksRUFBRWlCLE9BQU87SUFDYixXQUFTO0VBRVgsQ0FBQztFQUVEQyxJQUFJLEVBQUU7SUFDSmxCLElBQUksRUFBRUMsTUFBTTtJQUNaLFFBQU0sQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDO0lBQ3pCLFdBQVM7RUFDWDtBQUNGLENBQUMsQ0FBQztBQUVGLElBQU1rQixJQUFJLEdBQUd0QixLQUFLLENBQUMsTUFBTSxFQUFFQyxVQUFVLENBQUM7QUFBQyxJQUFBc0IsUUFBQSxHQUUxQkQsSUFBSTtBQUFBRSxPQUFBLGNBQUFELFFBQUEifQ==